#!/usr/bin/perl

use strict;

my $keyType          = "secp256k1";
my $opensslPath      = "/usr/local/openssl-ecdsa/bin";
my $removePassphrase = 1;

# files to use:
my $ecParamFile      = "router-key-params.$$.pem";
my $privateKeyFile   = "router-key.$$.private";
my $csrFile          = "router-key.$$.csr";
my $publicCertFile   = "router-key.$$.cert";
my $validityPeriod   = "365"; #days

if ($opensslPath) {
    $ENV{'PATH'} = $opensslPath . ":" . $ENV{'PATH'};
}

# generate the EC parameters, setting the keytype up
system("openssl ecparam -name $keyType -out $ecParamFile");

# generate the certificate signing request
system("openssl req -keyout $privateKeyFile -newkey ec:$ecParamFile -out $csrFile");

# optionally remove the enforced passphrase from above
if ($removePassphrase) {
    print "removing the enforced passphrase on the private key.  Please retype it\n";
    system("openssl ec -in $privateKeyFile -out tmp.$$.private");
    rename("tmp.$$.private", "$privateKeyFile");
}

# self-sign the certificate
# XXX: or CA-sign it
my $serial = `date +%Y%m%d0001`;
chomp($serial);
system("openssl x509 -set_serial $serial -in $csrFile  -out $publicCertFile -req -signkey $privateKeyFile -days $validityPeriod");
